PublicDateAtUSN: 2020-11-30
Candidate: CVE-2020-15257
CRD: 2020-11-30
PublicDate: 2020-12-01 03:15:00 UTC
References: 
 https://github.com/containerd/containerd/security/advisories/GHSA-36xw-fx78-c5r4
 https://ubuntu.com/security/notices/USN-4653-1
 https://ubuntu.com/security/notices/USN-4653-2
 https://www.cve.org/CVERecord?id=CVE-2020-15257
Description:
 containerd is an industry-standard container runtime and is available as a
 daemon for Linux and Windows. In containerd before versions 1.3.9 and
 1.4.3, the containerd-shim API is improperly exposed to host network
 containers. Access controls for the shimâ€™s API socket verified that the
 connecting process had an effective UID of 0, but did not otherwise
 restrict access to the abstract Unix domain socket. This would allow
 malicious containers running in the same network namespace as the shim,
 with an effective UID of 0 but otherwise reduced privileges, to cause new
 processes to be run with elevated privileges. This vulnerability has been
 fixed in containerd 1.3.9 and 1.4.3. Users should update to these versions
 as soon as they are released. It should be noted that containers started
 with an old version of containerd-shim should be stopped and restarted, as
 running containers will continue to be vulnerable even after an upgrade. If
 you are not providing the ability for untrusted users to start containers
 in the same network namespace as the shim (typically the "host" network
 namespace, for example with docker run --net=host or hostNetwork: true in a
 Kubernetes pod) and run with an effective UID of 0, you are not vulnerable
 to this issue. If you are running containers with a vulnerable
 configuration, you can deny access to all abstract sockets with AppArmor by
 adding a line similar to deny unix addr=@**, to your policy. It is best
 practice to run containers with a reduced set of privileges, with a
 non-zero UID, and with isolated namespaces. The containerd maintainers
 strongly advise against sharing namespaces with the host. Reducing the set
 of isolation mechanisms used for a container necessarily increases that
 container's privilege, regardless of what container runtime is used for
 running that container.
Ubuntu-Description: 
Notes: 
 seth-arnold> Containers started with an old version of containerd-shim should be
  stopped and restarted.
 seth-arnold> Patches are in Message-ID: <ZIoq.1605308443822728072.OowG@lists.cncf.io
 mdeslaur>
 mdeslaur> Updates released in USN-4653-1 were pulled from the archive due
 mdeslaur> to docker.io being stopped because of packaging issues.
 mdeslaur> Reverting this CVE to "needed" until new updates are released.
 mdeslaur>
 mdeslaur> The cause of the regression is being investigated, and new
 mdeslaur> updates to correct this CVE will be issued shortly.
Mitigation: 
 A line like deny unix addr=@**, can be added to container AppArmor policy.
Bugs: 
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N [5.2 MEDIUM]
 github: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N [5.2 MEDIUM]


Patches_containerd:
upstream_containerd: pending (1.3.9, 1.4.3)
precise/esm_containerd: DNE
trusty_containerd: ignored (end of standard support)
trusty/esm_containerd: DNE
esm-infra-legacy/trusty_containerd: DNE
xenial_containerd: released (1.2.6-0ubuntu1~16.04.6)
esm-apps/xenial_containerd: released (1.2.6-0ubuntu1~16.04.6)
bionic_containerd: released (1.3.3-0ubuntu1~18.04.4)
esm-apps/bionic_containerd: released (1.3.3-0ubuntu1~18.04.4)
focal_containerd: released (1.3.3-0ubuntu2.2)
esm-infra/focal_containerd: released (1.3.3-0ubuntu2.2)
groovy_containerd: released (1.3.7-0ubuntu3.2)
devel_containerd: released (1.3.7-0ubuntu4)
