Candidate: CVE-2023-40590
PublicDate: 2023-08-28 18:15:00 UTC
References:
 https://docs.python.org/3/library/subprocess.html#popen-constructor
 https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4
 https://www.cve.org/CVERecord?id=CVE-2023-40590
Description:
  GitPython is a python library used to interact with Git repositories. When
 resolving a program, Python/Windows look for the current working directory,
 and after that the PATH environment. GitPython defaults to use the `git`
 command, if a user runs GitPython from a repo has a `git.exe` or `git`
 executable, that program will be run instead of the one in the user's
 `PATH`. This is more of a problem on how Python interacts with Windows
 systems, Linux and any other OS aren't affected by this. But probably
 people using GitPython usually run it from the CWD of a repo. An attacker
 can trick a user to download a repository with a malicious `git`
 executable, if the user runs/imports GitPython from that directory, it
 allows the attacker to run any arbitrary commands. There is no fix
 currently available for windows users, however there are a few mitigations.
 1: Default to an absolute path for the git program on Windows, like
 `C:\\Program Files\\Git\\cmd\\git.EXE` (default git path installation). 2:
 Require users to set the `GIT_PYTHON_GIT_EXECUTABLE` environment variable
 on Windows systems. 3: Make this problem prominent in the documentation and
 advise users to never run GitPython from an untrusted repo, or set the
 `GIT_PYTHON_GIT_EXECUTABLE` env var to an absolute path. 4: Resolve the
 executable manually by only looking into the `PATH` environment variable.
Ubuntu-Description:
Notes:
 alexmurray> Only affects GitPython on Windows
Mitigation:
Bugs:
Priority: negligible
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H [7.8 HIGH]
 github: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H [7.8 HIGH]

Patches_python-git:
upstream_python-git: needs-triage
trusty_python-git: ignored (end of standard support)
trusty/esm_python-git: ignored (end of ESM support, was ignored [only affects GitPython on Windows])
esm-infra-legacy/trusty_python-git: ignored (only affects GitPython on Windows)
xenial_python-git: ignored (end of standard support)
esm-apps/xenial_python-git: ignored (only affects GitPython on Windows)
bionic_python-git: ignored (end of standard support)
esm-apps/bionic_python-git: ignored (only affects GitPython on Windows)
focal_python-git: ignored (only affects GitPython on Windows)
esm-apps/focal_python-git: ignored (only affects GitPython on Windows)
jammy_python-git: ignored (only affects GitPython on Windows)
esm-apps/jammy_python-git: ignored (only affects GitPython on Windows)
lunar_python-git: ignored (end of life, was ignored [only affects GitPython on Windows])
devel_python-git: ignored (only affects GitPython on Windows)
