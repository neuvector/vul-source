Candidate: CVE-2023-41880
PublicDate: 2023-09-15 20:15:00 UTC
References:
 https://www.cve.org/CVERecord?id=CVE-2023-41880
 https://rustsec.org/advisories/RUSTSEC-2023-0091.html
Description:
 Wasmtime is a standalone runtime for WebAssembly. Wasmtime versions from
 10.0.0 to versions 10.02, 11.0.2, and 12.0.1 contain a miscompilation of
 the WebAssembly `i64x2.shr_s` instruction on x86_64 platforms when the
 shift amount is a constant value that is larger than 32. Only x86_64 is
 affected so all other targets are not affected by this. The miscompilation
 results in the instruction producing an incorrect result, namely the low
 32-bits of the second lane of the vector are derived from the low 32-bits
 of the second lane of the input vector instead of the high 32-bits. The
 primary impact of this issue is that any WebAssembly program using the
 `i64x2.shr_s` with a constant shift amount larger than 32 may produce an
 incorrect result. This issue is not an escape from the WebAssembly sandbox.
 Execution of WebAssembly guest programs will still behave correctly with
 respect to memory sandboxing and isolation from the host. Wasmtime
 considers non-spec-compliant behavior as a security issue nonetheless. This
 issue was discovered through fuzzing of Wasmtime's code generator
 Cranelift. Wasmtime versions 10.0.2, 11.0.2, and 12.0.2 are all patched to
 no longer have this miscompilation. This issue only affects x86_64 hosts
 and the only workaround is to either scan for this pattern in wasm modules
 which is nontrivial or to disable the SIMD proposal for WebAssembly. Users
 prior to 10.0.0 are unaffected by this vulnerability.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N [5.3 MEDIUM]
 github: CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N [2.2 LOW]

Patches_rust-wasmtime:
upstream_rust-wasmtime: released (15.0.0+dfsg-1)
focal_rust-wasmtime: DNE
jammy_rust-wasmtime: DNE
noble_rust-wasmtime: not-affected (16.0.0+dfsg-3)
esm-apps/noble_rust-wasmtime: not-affected
oracular_rust-wasmtime: not-affected
plucky_rust-wasmtime: not-affected
devel_rust-wasmtime: not-affected
