Candidate: CVE-2022-39392
PublicDate: 2022-11-10 20:15:00 UTC
References:
 https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg
 https://github.com/bytecodealliance/wasmtime/commit/e60c3742904ccbb3e26da201c9221c38a4981d72
 https://www.cve.org/CVERecord?id=CVE-2022-39392
Description:
 Wasmtime is a standalone runtime for WebAssembly. Prior to version 2.0.2,
 there is a bug in Wasmtime's implementation of its pooling instance
 allocator when the allocator is configured to give WebAssembly instances a
 maximum of zero pages of memory. In this configuration, the virtual memory
 mapping for WebAssembly memories did not meet the compiler-required
 configuration requirements for safely executing WebAssembly modules.
 Wasmtime's default settings require virtual memory page faults to indicate
 that wasm reads/writes are out-of-bounds, but the pooling allocator's
 configuration would not create an appropriate virtual memory mapping for
 this meaning out of bounds reads/writes can successfully read/write memory
 unrelated to the wasm sandbox within range of the base address of the
 memory mapping created by the pooling allocator. This bug is not applicable
 with the default settings of the `wasmtime` crate. This bug can only be
 triggered by setting `InstanceLimits::memory_pages` to zero. This is
 expected to be a very rare configuration since this means that wasm modules
 cannot allocate any pages of linear memory. All wasm modules produced by
 all current toolchains are highly likely to use linear memory, so it's
 expected to be unlikely that this configuration is set to zero by any
 production embedding of Wasmtime. This bug has been patched and users
 should upgrade to Wasmtime 2.0.2. This bug can be worked around by
 increasing the `memory_pages` allotment when configuring the pooling
 allocator to a value greater than zero. If an embedding wishes to still
 prevent memory from actually being used then the `Store::limiter` method
 can be used to dynamically disallow growth of memory beyond 0 bytes large.
 Note that the default `memory_pages` value is greater than zero.
Ubuntu-Description:
Notes:
 tyhicks> mozjs contains a copy of the SpiderMonkey JavaScript engine
 mdeslaur> starting with Ubuntu 22.04, the firefox package is just a script
 mdeslaur> that installs the Firefox snap
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N [7.4 HIGH]
 github: CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:N [5.9 MEDIUM]

Patches_firefox:
upstream_firefox: needs-triage
trusty_firefox: ignored (end of standard support)
xenial_firefox: ignored (end of standard support)
bionic_firefox: ignored (end of standard support, was needs-triage)
focal_firefox: ignored (end of standard support, was ignored [bundled deps handled by upstream in new versions])
esm-infra/focal_firefox: ignored (bundled deps handled by upstream in new versions)
jammy_firefox: not-affected (code not present)
kinetic_firefox: not-affected (code not present)
lunar_firefox: not-affected (code not present)
mantic_firefox: not-affected (code not present)
noble_firefox: not-affected (code not present)
devel_firefox: not-affected (code not present)

Patches_thunderbird:
upstream_thunderbird: needs-triage
trusty_thunderbird: ignored (end of standard support)
xenial_thunderbird: ignored (end of standard support)
bionic_thunderbird: ignored (end of standard support, was needed)
focal_thunderbird: ignored (end of standard support, was ignored [bundled deps handled by upstream in new versions])
esm-infra/focal_thunderbird: ignored (bundled deps handled by upstream in new versions)
jammy_thunderbird: ignored (bundled deps handled by upstream in new versions)
kinetic_thunderbird: ignored (end of life, was needed)
lunar_thunderbird: ignored (end of life, was ignored [bundled deps handled by upstream in new versions])
mantic_thunderbird: ignored (end of life, was ignored [bundled deps handled by upstream in new versions])
noble_thunderbird: ignored (bundled deps handled by upstream in new versions)
devel_thunderbird: ignored (bundled deps handled by upstream in new versions)

Patches_mozjs38:
upstream_mozjs38: ignored
trusty_mozjs38: DNE
xenial_mozjs38: DNE
bionic_mozjs38: ignored (end of standard support, was needs-triage)
esm-apps/bionic_mozjs38: ignored
focal_mozjs38: DNE
esm-infra/focal_mozjs38: DNE
jammy_mozjs38: DNE
kinetic_mozjs38: DNE

Patches_mozjs52:
upstream_mozjs52: ignored
trusty_mozjs52: DNE
xenial_mozjs52: DNE
bionic_mozjs52: ignored (end of standard support, was needs-triage)
esm-infra/bionic_mozjs52: ignored
focal_mozjs52: ignored
esm-apps/focal_mozjs52: ignored
jammy_mozjs52: DNE
kinetic_mozjs52: DNE

Patches_mozjs68:
upstream_mozjs68: ignored
trusty_mozjs68: DNE
xenial_mozjs68: DNE
bionic_mozjs68: DNE
focal_mozjs68: ignored
esm-infra/focal_mozjs68: ignored
jammy_mozjs68: DNE
kinetic_mozjs68: DNE

Patches_mozjs78:
upstream_mozjs78: ignored
trusty_mozjs78: DNE
xenial_mozjs78: DNE
bionic_mozjs78: DNE
focal_mozjs78: DNE
esm-infra/focal_mozjs78: DNE
jammy_mozjs78: ignored
esm-apps/jammy_mozjs78: ignored
kinetic_mozjs78: ignored (end of life, was needs-triage)
lunar_mozjs78: ignored (end of life, was needs-triage)
mantic_mozjs78: DNE
noble_mozjs78: DNE
devel_mozjs78: DNE

Patches_mozjs91:
upstream_mozjs91: ignored
trusty_mozjs91: DNE
xenial_mozjs91: DNE
bionic_mozjs91: DNE
focal_mozjs91: DNE
esm-infra/focal_mozjs91: DNE
jammy_mozjs91: ignored
kinetic_mozjs91: DNE
