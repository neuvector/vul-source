Candidate: CVE-2023-45677
PublicDate: 2023-10-21 00:15:00 UTC
References:
 https://securitylab.github.com/advisories/GHSL-2023-145_GHSL-2023-151_stb_image_h/ (issue 10)
 https://github.com/nothings/stb/pull/1555
 https://github.com/nothings/stb/blob/5736b15f7ea0ffb08dd38af21067c314d6a3aae9/stb_vorbis.c#L3652-L3658
 https://github.com/nothings/stb/blob/5736b15f7ea0ffb08dd38af21067c314d6a3aae9/stb_vorbis.c#L3658
 https://securitylab.github.com/advisories/GHSL-2023-145_GHSL-2023-151_stb_image_h/
 https://github.com/nothings/stb/blob/5736b15f7ea0ffb08dd38af21067c314d6a3aae9/stb_vorbis.c#L3653
 https://github.com/nothings/stb/blob/5736b15f7ea0ffb08dd38af21067c314d6a3aae9/stb_vorbis.c#L3670C7-L3670C75
 https://github.com/nothings/stb/blob/5736b15f7ea0ffb08dd38af21067c314d6a3aae9/stb_vorbis.c#L950-L961
 https://www.cve.org/CVERecord?id=CVE-2023-45677
Description:
 stb_vorbis is a single file MIT licensed library for processing ogg vorbis
 files. A crafted file may trigger out of bounds write in `f->vendor[len] =
 (char)'\0';`. The root cause is that if `len` read in `start_decoder` is a
 negative number and `setup_malloc` successfully allocates memory in that
 case, but memory write is done with a negative index `len`. Similarly if
 len is INT_MAX the integer overflow len+1 happens in `f->vendor =
 (char*)setup_malloc(f, sizeof(char) * (len+1));` and `f->comment_list[i] =
 (char*)setup_malloc(f, sizeof(char) * (len+1));`. This issue may lead to
 code execution.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L [7.3 HIGH]
 nvd: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H [7.8 HIGH]

Patches_libstb:
upstream_libstb: needs-triage
trusty_libstb: ignored (end of standard support)
xenial_libstb: ignored (end of standard support)
bionic_libstb: ignored (end of standard support)
focal_libstb: ignored (end of standard support, was needs-triage)
esm-infra/focal_libstb: DNE (focal was needs-triage)
esm-apps/focal_libstb: needs-triage
jammy_libstb: needs-triage
esm-apps/jammy_libstb: needs-triage
lunar_libstb: ignored (end of life, was needs-triage)
mantic_libstb: ignored (end of life, was needs-triage)
noble_libstb: needs-triage
esm-apps/noble_libstb: needs-triage
oracular_libstb: needs-triage
plucky_libstb: needs-triage
devel_libstb: needs-triage
