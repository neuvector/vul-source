Candidate: CVE-2025-59732
PublicDate: 2025-10-06 08:15:00 UTC
References:
 https://www.cve.org/CVERecord?id=CVE-2025-59732
 https://issuetracker.google.com/issues/436510316
Description:
 When decoding an OpenEXR file that uses DWAA or DWAB compression, there's
 an implicit assumption that the height and width are divisible by 8.
 
 If the height or width of the image is not divisible by 8, the copy loops
 at [0] and [1] will continue to write until the next multiple of 8.
 
 The buffer td->uncompressed_data is allocated in decode_block based on the
 precise height and width of the image, so the "rounded-up" multiple of 8 in
 the copy loop can exceed the buffer bounds, and the write block starting at
 [2] can corrupt following heap memory.
 
 
 
 We recommend upgrading to version 8.0 or beyond.
Ubuntu-Description:
Notes:
 rodrigo-zaiden> Google Big Sleep identifier: BIGSLEEP-436510316
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 google: CVSS:4.0/AV:A/AC:H/AT:N/PR:N/UI:P/VC:H/VI:H/VA:N/SC:H/SI:H/SA:N [8.7 HIGH]

Patches_ffmpeg:
 upstream: https://git.ffmpeg.org/gitweb/ffmpeg.git/commit/f45da79b2c336c5f8f3e563d72b8a22fecdcde0c
upstream_ffmpeg: needs-triage
esm-apps/xenial_ffmpeg: needs-triage
esm-apps/bionic_ffmpeg: needs-triage
esm-apps/focal_ffmpeg: needs-triage
jammy_ffmpeg: needs-triage
esm-apps/jammy_ffmpeg: needs-triage
noble_ffmpeg: needs-triage
esm-apps/noble_ffmpeg: needs-triage
plucky_ffmpeg: needs-triage
questing_ffmpeg: needs-triage
devel_ffmpeg: needs-triage

Patches_libav:
upstream_libav: needs-triage
esm-infra-legacy/trusty_libav: needs-triage
jammy_libav: DNE
noble_libav: DNE
plucky_libav: DNE
questing_libav: DNE
devel_libav: DNE
