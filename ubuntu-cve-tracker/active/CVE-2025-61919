Candidate: CVE-2025-61919
PublicDate: 2025-10-10 20:15:00 UTC
References:
 https://www.cve.org/CVERecord?id=CVE-2025-61919
 https://github.com/rack/rack/security/advisories/GHSA-6xw4-3v39-52mm
 https://github.com/rack/rack/commit/e179614c4a653283286f5f046428cbb85f21146f (v3.2.3)
 https://github.com/rack/rack/commit/cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db (v3.1.18)
 https://github.com/rack/rack/commit/4e2c903991a790ee211a3021808ff4fd6fe82881 (v2.2.20)
 https://github.com/rack/rack/commit/4e2c903991a790ee211a3021808ff4fd6fe82881
 https://github.com/rack/rack/commit/cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db
 https://github.com/rack/rack/commit/e179614c4a653283286f5f046428cbb85f21146f
Description:
 Rack is a modular Ruby web server interface. Prior to versions 2.2.20,
 3.1.18, and 3.2.3, `Rack::Request#POST` reads the entire request body into
 memory for `Content-Type: application/x-www-form-urlencoded`, calling
 `rack.input.read(nil)` without enforcing a length or cap. Large request
 bodies can therefore be buffered completely into process memory before
 parsing, leading to denial of service (DoS) through memory exhaustion.
 Users should upgrade to Rack version 2.2.20, 3.1.18, or 3.2.3, anu of which
 enforces form parameter limits using `query_parser.bytesize_limit`,
 preventing unbounded reads of `application/x-www-form-urlencoded` bodies.
 Additionally, enforce strict maximum body size at the proxy or web server
 layer (e.g., Nginx `client_max_body_size`, Apache `LimitRequestBody`).
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
 http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1117856
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H [7.5 HIGH]

Patches_ruby-rack:
upstream_ruby-rack: needs-triage
esm-infra-legacy/trusty_ruby-rack: needs-triage
esm-apps/xenial_ruby-rack: needs-triage
esm-apps/bionic_ruby-rack: needs-triage
esm-apps/focal_ruby-rack: needs-triage
jammy_ruby-rack: needs-triage
esm-apps/jammy_ruby-rack: needs-triage
noble_ruby-rack: needs-triage
plucky_ruby-rack: needs-triage
questing_ruby-rack: needs-triage
devel_ruby-rack: needs-triage
