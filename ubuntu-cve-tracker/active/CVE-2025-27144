Candidate: CVE-2025-27144
PublicDate: 2025-02-25
References:
 https://www.cve.org/CVERecord?id=CVE-2025-27144
 https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22
 https://github.com/go-jose/go-jose/releases/tag/v4.0.5
 https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78
Description:
 Go JOSE provides an implementation of the Javascript Object Signing and
 Encryption set of standards in Go, including support for JSON Web
 Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT)
 standards. In versions on the 4.x branch prior to version 4.0.5, when
 parsing compact JWS or JWE input, Go JOSE could use excessive memory. The
 code used strings.Split(token, ".") to split JWT tokens, which is
 vulnerable to excessive memory consumption when processing maliciously
 crafted tokens with a large number of `.` characters.  An attacker could
 exploit this by sending numerous malformed tokens, leading to memory
 exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a
 workaround, applications could pre-validate that payloads passed to Go JOSE
 do not contain an excessive number of `.` characters.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:

Patches_golang-github-go-jose-go-jose:
upstream_golang-github-go-jose-go-jose: needs-triage
focal_golang-github-go-jose-go-jose: DNE
jammy_golang-github-go-jose-go-jose: DNE
noble_golang-github-go-jose-go-jose: needs-triage
esm-apps/noble_golang-github-go-jose-go-jose: needs-triage
oracular_golang-github-go-jose-go-jose: needs-triage
devel_golang-github-go-jose-go-jose: needs-triage
