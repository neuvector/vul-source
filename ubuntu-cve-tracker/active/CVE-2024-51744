Candidate: CVE-2024-51744
PublicDate: 2024-11-04 22:15:00 UTC
References:
 https://www.cve.org/CVERecord?id=CVE-2024-51744
 https://github.com/golang-jwt/jwt/security/advisories/GHSA-29wx-vh33-7x7r
 https://github.com/golang-jwt/jwt/commit/7b1c1c00a171c6c79bbdb40e4ce7d197060c1c2c
Description:
 golang-jwt is a Go implementation of JSON Web Tokens. Unclear documentation
 of the error behavior in `ParseWithClaims` can lead to situation where
 users are potentially not checking errors in the way they should be.
 Especially, if a token is both expired and invalid, the errors returned by
 `ParseWithClaims` return both error codes. If users only check for the
 `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded
 `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens.
 A fix has been back-ported with the error handling logic from the `v5`
 branch to the `v4` branch. In this logic, the `ParseWithClaims` function
 will immediately return in "dangerous" situations (e.g., an invalid
 signature), limiting the combined errors only to situations where the
 signature is valid, but further validation failed (e.g., if the signature
 is valid, but is expired AND has the wrong audience). This fix is part of
 the 4.5.1 release. We are aware that this changes the behaviour of an
 established function and is not 100 % backwards compatible, so updating to
 4.5.1 might break your code. In case you cannot update to 4.5.0, please
 make sure that you are properly checking for all errors ("dangerous" ones
 first), so that you are not running in the case detailed above.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N [3.1 LOW]

Patches_golang-github-golang-jwt-jwt:
upstream_golang-github-golang-jwt-jwt: needs-triage
focal_golang-github-golang-jwt-jwt: DNE
esm-infra/focal_golang-github-golang-jwt-jwt: DNE
jammy_golang-github-golang-jwt-jwt: needs-triage
esm-apps/jammy_golang-github-golang-jwt-jwt: needs-triage
noble_golang-github-golang-jwt-jwt: needs-triage
esm-apps/noble_golang-github-golang-jwt-jwt: needs-triage
oracular_golang-github-golang-jwt-jwt: ignored (end of life, was needs-triage)
plucky_golang-github-golang-jwt-jwt: needs-triage
questing_golang-github-golang-jwt-jwt: needs-triage
devel_golang-github-golang-jwt-jwt: needs-triage

Patches_golang-github-golang-jwt-jwt-v5:
upstream_golang-github-golang-jwt-jwt-v5: needs-triage
focal_golang-github-golang-jwt-jwt-v5: DNE
esm-infra/focal_golang-github-golang-jwt-jwt-v5: DNE
jammy_golang-github-golang-jwt-jwt-v5: DNE
noble_golang-github-golang-jwt-jwt-v5: needs-triage
esm-apps/noble_golang-github-golang-jwt-jwt-v5: needs-triage
oracular_golang-github-golang-jwt-jwt-v5: ignored (end of life, was needs-triage)
plucky_golang-github-golang-jwt-jwt-v5: needs-triage
questing_golang-github-golang-jwt-jwt-v5: needs-triage
devel_golang-github-golang-jwt-jwt-v5: needs-triage
