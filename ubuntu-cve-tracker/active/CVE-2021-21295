PublicDateAtUSN: 2021-03-09 19:15:00 UTC
Candidate: CVE-2021-21295
PublicDate: 2021-03-09 19:15:00 UTC
References:
 https://github.com/netty/netty/security/advisories/GHSA-wm47-8v5p-wjpj
 https://github.com/netty/netty/commit/89c241e3b1795ff257af4ad6eadc616cb2fb3dc4
 https://github.com/Netflix/zuul/pull/980
 https://ubuntu.com/security/notices/USN-6049-1
 https://www.cve.org/CVERecord?id=CVE-2021-21295
Description:
 Netty is an open-source, asynchronous event-driven network application
 framework for rapid development of maintainable high performance protocol
 servers & clients. In Netty (io.netty:netty-codec-http2) before version
 4.1.60.Final there is a vulnerability that enables request smuggling. If a
 Content-Length header is present in the original HTTP/2 request, the field
 is not validated by `Http2MultiplexHandler` as it is propagated up. This is
 fine as long as the request is not proxied through as HTTP/1.1. If the
 request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1
 domain objects (`HttpRequest`, `HttpContent`, etc.) via
 `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's
 pipeline and proxied through a remote peer as HTTP/1.1 this may result in
 request smuggling. In a proxy case, users may assume the content-length is
 validated somehow, which is not the case. If the request is forwarded to a
 backend channel that is a HTTP/1.1 connection, the Content-Length now has
 meaning and needs to be checked. An attacker can smuggle requests inside
 the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example
 attack refer to the linked GitHub Advisory. Users are only affected if all
 of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used,
 `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects,
 and these HTTP/1.1 objects are forwarded to another remote peer. This has
 been patched in 4.1.60.Final As a workaround, the user can do the
 validation by themselves by implementing a custom `ChannelInboundHandler`
 that is put in the `ChannelPipeline` behind
 `Http2StreamFrameToHttpObjectCodec`.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N [5.9 MEDIUM]
 nvd: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N [5.9 MEDIUM]


Patches_netty:
upstream_netty: released (4.1.60.Final)
precise/esm_netty: DNE
trusty_netty: ignored (end of standard support)
trusty/esm_netty: ignored (end of ESM support, was needs-triage)
esm-infra-legacy/trusty_netty: needs-triage
xenial_netty: ignored (end of standard support, was needs-triage)
esm-apps/xenial_netty: released (1:4.0.34-1ubuntu0.1~esm1)
bionic_netty: ignored (end of standard support, was needs-triage)
esm-apps/bionic_netty: released (1:4.1.7-4ubuntu0.1+esm2)
focal_netty: ignored (end of standard support, was needed)
esm-infra/focal_netty: DNE (focal was needed)
esm-apps/focal_netty: released (1:4.1.45-1ubuntu0.1~esm1)
groovy_netty: ignored (end of life)
hirsute_netty: ignored (end of life)
impish_netty: ignored (end of life)
jammy_netty: released (1:4.1.48-4+deb11u1build0.22.04.1)
esm-apps/jammy_netty: released (1:4.1.48-4+deb11u1build0.22.04.1)
kinetic_netty: released (1:4.1.48-5ubuntu0.1)
lunar_netty: ignored (end of life, was needs-triage)
mantic_netty: ignored (end of life, was needs-triage)
noble_netty: released (4.1.48-3)
esm-apps/noble_netty: released (4.1.48-3)
oracular_netty: released (4.1.48-3)
plucky_netty: released (4.1.48-3)
devel_netty: released (4.1.48-3)
