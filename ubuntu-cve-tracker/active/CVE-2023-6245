Candidate: CVE-2023-6245
PublicDate: 2023-12-08 15:15:00 UTC
References:
 https://github.com/dfinity/candid/pull/478
 https://internetcomputer.org/docs/current/references/candid-ref
 https://github.com/dfinity/candid/blob/master/spec/Candid.md
 https://github.com/dfinity/candid/security/advisories/GHSA-7787-p7x6-fq3j
 https://internetcomputer.org/docs/current/references/ic-interface-spec
 https://www.cve.org/CVERecord?id=CVE-2023-6245
Description:
 The Candid library causes a Denial of Service while parsing a specially
 crafted payload with 'empty' data type. For example, if the payload is
 `record { * ; empty }` and the canister interface expects `record { * }`
 then the Rust candid decoder treats empty as an extra field required by the
 type. The problem with the type empty is that the candid Rust library
 wrongly categorizes empty as a recoverable error when skipping the field
 and thus causing an infinite decoding loop. Canisters using affected
 versions of candid are exposed to denial of service by causing the decoding
 to run indefinitely until the canister traps due to reaching maximum
 instruction limit per execution round. Repeated exposure to the payload
 will result in degraded performance of the canister. Note: Canisters
 written in Motoko are unaffected.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 dfinity: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H [7.5 HIGH]
 nvd: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H [7.5 HIGH]

Patches_candid:
upstream_candid: needs-triage
trusty_candid: ignored (end of standard support)
xenial_candid: ignored (end of standard support)
bionic_candid: ignored (end of standard support)
esm-apps/bionic_candid: needs-triage
focal_candid: DNE
esm-infra/focal_candid: DNE
jammy_candid: DNE
lunar_candid: DNE
mantic_candid: DNE
noble_candid: DNE
oracular_candid: DNE
plucky_candid: DNE
devel_candid: DNE
