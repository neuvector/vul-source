Candidate: CVE-2025-22150
PublicDate: 2025-01-21 18:15:00 UTC
References:
 https://www.cve.org/CVERecord?id=CVE-2025-22150
 https://github.com/nodejs/undici/security/advisories/GHSA-c76h-2ccp-4975
 https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f
 https://github.com/nodejs/undici/blob/8b06b8250907d92fead664b3368f1d2aa27c1f35/lib/web/fetch/body.js#L113
 https://github.com/nodejs/undici/commit/711e20772764c29f6622ddc937c63b6eefdf07d0
 https://github.com/nodejs/undici/commit/c2d78cd19fe4f4c621424491e26ce299e65e934a
 https://github.com/nodejs/undici/commit/c3acc6050b781b827d80c86cbbab34f14458d385
 https://hackerone.com/reports/2913312
Description:
 Undici is an HTTP/1.1 client. Starting in version 4.5.0 and prior to
 versions 5.28.5, 6.21.1, and 7.2.3, undici uses `Math.random()` to choose
 the boundary for a multipart/form-data request. It is known that the output
 of `Math.random()` can be predicted if several of its generated values are
 known. If there is a mechanism in an app that sends multipart requests to
 an attacker-controlled website, they can use this to leak the necessary
 values. Therefore, an attacker can tamper with the requests going to the
 backend APIs if certain conditions are met. This is fixed in versions
 5.28.5, 6.21.1, and 7.2.3. As a workaround, do not issue multipart requests
 to attacker controlled servers.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:N [6.8 MEDIUM]

Patches_node-undici:
upstream_node-undici: needs-triage
focal_node-undici: DNE
jammy_node-undici: DNE
noble_node-undici: needs-triage
esm-apps/noble_node-undici: needs-triage
oracular_node-undici: needs-triage
plucky_node-undici: needs-triage
devel_node-undici: needs-triage
