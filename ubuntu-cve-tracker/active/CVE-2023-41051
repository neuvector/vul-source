Candidate: CVE-2023-41051
PublicDate: 2023-09-01 19:15:00 UTC
References:
 https://github.com/rust-vmm/vm-memory/security/advisories/GHSA-49hh-fprx-m68g
 https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8 (v0.12.2)
 https://rustsec.org/advisories/RUSTSEC-2023-0056.html
 https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8
 https://crates.io/crates/vm-memory/0.12.2
 https://www.cve.org/CVERecord?id=CVE-2023-41051
Description:
 In a typical Virtual Machine Monitor (VMM) there are several components,
 such as boot loader, virtual device drivers, virtio backend drivers and
 vhost drivers, that need to access the VM physical memory. The vm-memory
 rust crate provides a set of traits to decouple VM memory consumers from VM
 memory providers. An issue was discovered in the default implementations of
 the `VolatileMemory::{get_atomic_ref, aligned_as_ref, aligned_as_mut,
 get_ref, get_array_ref}` trait functions, which allows out-of-bounds memory
 access if the `VolatileMemory::get_slice` function returns a
 `VolatileSlice` whose length is less than the functionâ€™s `count` argument.
 No implementations of `get_slice` provided in `vm_memory` are affected.
 Users of custom `VolatileMemory` implementations may be impacted if the
 custom implementation does not adhere to `get_slice`'s documentation. The
 issue started in version 0.1.0 but was fixed in version 0.12.2 by inserting
 a check that verifies that the `VolatileSlice` returned by `get_slice` is
 of the correct length. Users are advised to upgrade. There are no known
 workarounds for this issue.
 
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
 http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1051101
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L [2.5 LOW]
 nvd: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:H [4.7 MEDIUM]

Patches_rust-vm-memory:
upstream_rust-vm-memory: released (0.12.2-1)
trusty_rust-vm-memory: ignored (end of standard support)
xenial_rust-vm-memory: ignored (end of standard support)
bionic_rust-vm-memory: ignored (end of standard support)
focal_rust-vm-memory: DNE
esm-infra/focal_rust-vm-memory: DNE
jammy_rust-vm-memory: DNE
lunar_rust-vm-memory: ignored (end of life, was needs-triage)
mantic_rust-vm-memory: ignored (end of life, was needs-triage)
noble_rust-vm-memory: needs-triage
esm-apps/noble_rust-vm-memory: needs-triage
oracular_rust-vm-memory: not-affected (0.14.0-1)
plucky_rust-vm-memory: not-affected (0.14.0-1)
questing_rust-vm-memory: not-affected (0.14.0-1)
devel_rust-vm-memory: not-affected (0.14.0-1)
