PublicDateAtUSN: 2020-06-03 23:15:00 UTC
Candidate: CVE-2020-11080
PublicDate: 2020-06-03 23:15:00 UTC
References:
 https://nodejs.org/en/blog/vulnerability/june-2020-security-releases/#http-2-large-settings-frame-dos-low-cve-2020-11080
 https://github.com/nghttp2/nghttp2/commit/336a98feb0d56b9ac54e12736b18785c27f75090
 https://github.com/nghttp2/nghttp2/commit/f8da73bd042f810f34d19f9eae02b46d870af394
 https://github.com/nghttp2/nghttp2/security/advisories/GHSA-q5wr-xfw9-q7xr
 https://ubuntu.com/security/notices/USN-6142-1
 https://www.cve.org/CVERecord?id=CVE-2020-11080
Description:
 In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame
 payload causes denial of service. The proof of concept attack involves a
 malicious client constructing a SETTINGS frame with a length of 14,400
 bytes (2400 individual settings entries) over and over again. The attack
 causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability.
 There is a workaround to this vulnerability. Implement
 nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS
 frame and the number of settings entries are large (e.g., > 32), then drop
 the connection.
Ubuntu-Description:
Notes:
 sahnaseredini> nodejs uses system nghttp2
Mitigation:
Bugs:
 http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=962145
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L [3.7 LOW]
 nvd: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H [7.5 HIGH]


Patches_nodejs:
upstream_nodejs: needs-triage
precise/esm_nodejs: DNE
trusty_nodejs: ignored (end of standard support)
trusty/esm_nodejs: not-affected (code not present)
esm-infra-legacy/trusty_nodejs: not-affected (code not present)
xenial_nodejs: ignored (end of standard support, was needs-triage)
esm-apps/xenial_nodejs: not-affected (code not present)
bionic_nodejs: ignored (end of standard support, was needs-triage)
esm-apps/bionic_nodejs: not-affected (code-not-compiled)
eoan_nodejs: ignored (end of life)
focal_nodejs: not-affected (code-not-compiled)
esm-apps/focal_nodejs: not-affected (code-not-compiled)
groovy_nodejs: ignored (end of life)
hirsute_nodejs: ignored (end of life)
impish_nodejs: ignored (end of life)
jammy_nodejs: not-affected (code-not-compiled)
esm-apps/jammy_nodejs: not-affected (code-not-compiled)
kinetic_nodejs: not-affected (code-not-compiled)
lunar_nodejs: not-affected (code-not-compiled)
mantic_nodejs: ignored (end of life, was needs-triage)
noble_nodejs: needs-triage
esm-apps/noble_nodejs: needs-triage
oracular_nodejs: needs-triage
plucky_nodejs: needs-triage
devel_nodejs: needs-triage

Patches_nghttp2:
upstream_nghttp2: needs-triage
precise/esm_nghttp2: DNE
trusty_nghttp2: ignored (end of standard support)
trusty/esm_nghttp2: DNE
esm-infra-legacy/trusty_nghttp2: DNE
xenial_nghttp2: ignored (end of standard support, was needs-triage)
esm-apps/xenial_nghttp2: released (1.7.1-1ubuntu0.1~esm1)
bionic_nghttp2: ignored (end of standard support, was needed)
esm-infra/bionic_nghttp2: released (1.30.0-1ubuntu1+esm1)
focal_nghttp2: released (1.40.0-1ubuntu0.1)
jammy_nghttp2: not-affected (1.43.0-1build3)
kinetic_nghttp2: not-affected (1.49.0-1)
lunar_nghttp2: not-affected (1.52.0-1)
mantic_nghttp2: not-affected (1.53.0-1)
noble_nghttp2: not-affected (1.53.0-1)
oracular_nghttp2: not-affected (1.53.0-1)
plucky_nghttp2: not-affected (1.53.0-1)
devel_nghttp2: not-affected (1.53.0-1)
