Candidate: CVE-2025-11233
PublicDate: 2025-10-06
References:
 https://www.cve.org/CVERecord?id=CVE-2025-11233
 https://groups.google.com/g/rustlang-security-announcements/c/oT9zCvLLYkw
 https://github.com/rust-lang/rust/pull/141864
Description:
 Starting from Rust 1.87.0 and before Rust 1.89.0, the tier 3 Cygwin target
 (`x86_64-pc-cygwin`) didn't correctly handle path separators, causing the
 standard library's Path API to ignore path components separated by
 backslashes. Due to this, programs compiled for Cygwin that validate paths
 could misbehave, potentially allowing path traversal attacks or malicious
 filesystem operations.
 
 Rust 1.89.0 fixes the issue by handling both Win32 and Unix style paths in
 the standard library for the Cygwin target.
 
 While we assess the severity of this vulnerability as "medium", please note
 that the tier 3 Cygwin compilation target is only available when building
 it from source: no pre-built binaries are distributed by the Rust project,
 and it cannot be installed through Rustup. Unless you manually compiled the
 `x86_64-pc-cygwin` target you are not affected by this vulnerability. Users
 of the tier 1 MinGW target (`x86_64-pc-windows-gnu`) are also explicitly
 not affected.
Ubuntu-Description:
Notes:
 sbeattie> cargo in mantic was merged into rustc
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 rust: CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:L/VI:L/VA:L/SC:L/SI:L/SA:L/AU:Y/RE:L/U:Green [6.3 MEDIUM]

Patches_rustc:
upstream_rustc: needs-triage
esm-infra-legacy/trusty_rustc: needs-triage
esm-apps/xenial_rustc: needs-triage
esm-apps/bionic_rustc: needs-triage
esm-apps/focal_rustc: needs-triage
jammy_rustc: needs-triage
noble_rustc: needs-triage
plucky_rustc: DNE
devel_rustc: DNE

Patches_cargo:
upstream_cargo: needs-triage
esm-apps/xenial_cargo: needs-triage
esm-apps/bionic_cargo: needs-triage
esm-apps/focal_cargo: needs-triage
jammy_cargo: needs-triage
esm-apps/jammy_cargo: needs-triage
noble_cargo: DNE
plucky_cargo: DNE
devel_cargo: DNE
