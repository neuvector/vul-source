Candidate: CVE-2023-24816
PublicDate: 2023-02-10 20:15:00 UTC
References:
 https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7
 https://github.com/ipython/ipython/commit/991849c247fc208628879e7ca2923b3c218a5a75 (8.10.0)
 https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117
 https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f
 https://github.com/ipython/ipython/blob/56e6925dfa50e2c7f4a6471547b8176275db7c25/IPython/utils/_process_win32.py#L20
 https://www.cve.org/CVERecord?id=CVE-2023-24816
Description:
 IPython (Interactive Python) is a command shell for interactive computing
 in multiple programming languages, originally developed for the Python
 programming language. Versions prior to 8.1.0 are subject to a command
 injection vulnerability with very specific prerequisites. This
 vulnerability requires that the function
 `IPython.utils.terminal.set_term_title` be called on Windows in a Python
 environment where ctypes is not available. The dependency on `ctypes` in
 `IPython.utils._process_win32` prevents the vulnerable code from ever being
 reached in the ipython binary. However, as a library that could be used by
 another tool `set_term_title` could be called and hence introduce a
 vulnerability. Should an attacker get untrusted input to an instance of
 this function they would be able to inject shell commands as current
 process and limited to the scope of the current process. Users of ipython
 as a library are advised to upgrade. Users unable to upgrade should ensure
 that any calls to the `IPython.utils.terminal.set_term_title` function are
 done with trusted or filtered input.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: low
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L [4.5 MEDIUM]
 nvd: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H [7.0 HIGH]

Patches_ipython:
upstream_ipython: not-affected (debian: Windows-specific)
trusty_ipython: ignored (end of standard support)
xenial_ipython: ignored (end of standard support)
bionic_ipython: ignored (end of standard support, was needs-triage)
focal_ipython: ignored (end of standard support, was needs-triage)
jammy_ipython: needs-triage
kinetic_ipython: ignored (end of life, was needs-triage)
trusty/esm_ipython: ignored (end of ESM support, was needs-triage)
esm-infra-legacy/trusty_ipython: needs-triage
esm-apps/xenial_ipython: needs-triage
esm-apps/bionic_ipython: needs-triage
esm-apps/focal_ipython: needs-triage
esm-apps/jammy_ipython: needs-triage
lunar_ipython: ignored (end of life, was needs-triage)
mantic_ipython: ignored (end of life, was needs-triage)
noble_ipython: needs-triage
esm-apps/noble_ipython: needs-triage
oracular_ipython: ignored (end of life, was needs-triage)
plucky_ipython: needs-triage
questing_ipython: needs-triage
devel_ipython: needs-triage
