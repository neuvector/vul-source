Candidate: CVE-2025-47909
PublicDate: 2025-08-29 16:15:00 UTC
References:
 https://www.cve.org/CVERecord?id=CVE-2025-47909
 https://github.com/golang/vulndb/issues/3884
 https://github.com/advisories/GHSA-82ff-hg59-8x73
 https://pkg.go.dev/vuln/GO-2025-3884
Description:
 Hosts listed in TrustedOrigins implicitly allow requests from the
 corresponding HTTP origins, allowing network MitMs to perform CSRF attacks.
 After the CVE-2025-24358 fix, a network attacker that places a form at
 http://example.com can't get it to submit to https://example.com because
 the Origin header is checked with sameOrigin against a synthetic URL.
 However, if a host is added to TrustedOrigins, both its HTTP and HTTPS
 origins will be allowed, because the schema of the synthetic URL is ignored
 and only the host is checked. For example, if an application is hosted on
 https://example.com and adds example.net to TrustedOrigins, a network
 attacker can serve a form at http://example.net to perform the attack.
 Applications should migrate to net/http.CrossOriginProtection, introduced
 in Go 1.25. If that is not an option, a backport is available as a module
 at filippo.io/csrf, and a drop-in replacement for the
 github.com/gorilla/csrf API is available at filippo.io/csrf/gorilla.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 cisa-adp: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L [7.3 HIGH]

Patches_golang-github-gorilla-csrf:
upstream_golang-github-gorilla-csrf: needs-triage
esm-apps/focal_golang-github-gorilla-csrf: needs-triage
jammy_golang-github-gorilla-csrf: needs-triage
esm-apps/jammy_golang-github-gorilla-csrf: needs-triage
noble_golang-github-gorilla-csrf: needs-triage
esm-apps/noble_golang-github-gorilla-csrf: needs-triage
plucky_golang-github-gorilla-csrf: needs-triage
questing_golang-github-gorilla-csrf: needs-triage
devel_golang-github-gorilla-csrf: needs-triage
