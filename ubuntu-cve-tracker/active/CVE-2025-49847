Candidate: CVE-2025-49847
PublicDate: 2025-06-17 20:15:00 UTC
References:
 https://www.cve.org/CVERecord?id=CVE-2025-49847
 https://github.com/ggml-org/llama.cpp/security/advisories/GHSA-8wwf-w4qm-gpqr
 https://github.com/ggml-org/llama.cpp/commit/3cfbbdb44e08fd19429fed6cc85b982a91f0efd5 (b5662)
 https://github.com/ggml-org/llama.cpp/commit/3cfbbdb44e08fd19429fed6cc85b982a91f0efd5
Description:
 llama.cpp is an inference of several LLM models in C/C++. Prior to version
 b5662, an attacker‐supplied GGUF model vocabulary can trigger a buffer
 overflow in llama.cpp’s vocabulary‐loading code. Specifically, the helper
 _try_copy in llama.cpp/src/vocab.cpp: llama_vocab::impl::token_to_piece()
 casts a very large size_t token length into an int32_t, causing the length
 check (if (length < (int32_t)size)) to be bypassed. As a result, memcpy is
 still called with that oversized size, letting a malicious model overwrite
 memory beyond the intended buffer. This can lead to arbitrary memory
 corruption and potential code execution. This issue has been patched in
 version b5662.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 github: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H [8.8 HIGH]

Patches_llama.cpp:
upstream_llama.cpp: needs-triage
jammy_llama.cpp: DNE
noble_llama.cpp: DNE
oracular_llama.cpp: DNE
plucky_llama.cpp: DNE
devel_llama.cpp: needs-triage
